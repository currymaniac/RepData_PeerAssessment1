activity <- read.csv("activity.csv")
?read.csv
activity <- read.csv("activity.csv", colClasses=c("integer", "Date", "integer"))
?aggregate
steps_day <- aggregate(x=activity$steps, by=activity$date)
steps_day <- aggregate(x=activity$steps, by=activity$date, fun=mean)
steps_day <- aggregate(x=activity$steps, by=activity$date, FUN=mean)
steps_day <- aggregate(x=activity$steps, by=list(activity$date), FUN=mean)
steps_day <- aggregate(x=activity$steps, by=list(activity$date), FUN=sum)
?hist
names(steps_day) <- c("date", "steps")
hist(steps_day)
hist(steps_day$steps)
hist(steps_day$steps, col="Red")
mean(steps_day$steps)
median(steps_day$steps)
mean(steps_day$steps, na.rm=TRUE)
median(steps_day$steps, na.rm=TRUE)
steps_day <- aggregate(x=activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
mean(steps_day$steps, na.rm=TRUE)
names(steps_day) <- c("date", "steps")
mean(steps_day$steps, na.rm=TRUE)
median(steps_day$steps, na.rm=TRUE)
hist(steps_day$steps, col="Red")
avg_steps_int <- aggregate(x=activity$steps, by=list(activity$interval), FUN=mean, na.rm=TRUE)
avg_steps_int <- aggregate(x=activity$steps, by=list(activity$interval), FUN=mean, na.rm=TRUE)
names(avg_steps_int) <- c("interval","steps")
plot(x=avg_steps_int$interval, y=avg_steps_int, type = "l")
plot(x=avg_steps_int$interval, y=avg_steps_int$steps, type = "l")
plot(x=avg_steps_int$interval, y=avg_steps_int$steps, type = "l", xlab="Time", ylab="Average steps")
which.max(avg_steps_int$steps)
row(avg_steps_int)[avg_steps_int$steps==max(avg_steps_int$steps)]
avg_steps_int[which.max(avg_steps_int$steps)]
avg_steps_int[which.max(avg_steps_int$steps),]
avg_steps_int[which.max(avg_steps_int$steps),]$interval
is.na(activity$steps)
sum(is.na(activity$steps))
filled_activity <- merge(x=activity, y=avg_steps_int)
?merge
filled_activity <- merge(x=activity, y=avg_steps_int, by="interval")
filled_activity$steps.x[is.na(filled_activity$steps.x)]
filled_activity$steps.x[is.na(filled_activity$steps.x)] <- filled_activity$steps.y[is.na(filled_activity$steps.x)]
filled_activity <- filled_activity[("steps.x", "date","interval")]
filled_activity <- filled_activity[c("steps.x", "date","interval")]
filled_activity <- filled_activity[c("steps.x", "date", "interval")]
names(filled_activity) <- c("steps", "date", "interval")
steps.day.filled <- aggregate(x=filled_activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
names(steps.day.filled) <- c("date", "steps")
hist(steps.day.filled$steps, col="Red")
mean(steps.day.filled$steps, na.rm=TRUE)
median(steps.day.filled$steps, na.rm=TRUE)
View(steps.day.filled)
filled.activity <- merge(x=activity, y=avg.steps.int, by="interval")
avg.steps.int <- aggregate(x=activity$steps, by=list(activity$interval), FUN=mean, na.rm=TRUE)
names(avg.steps.int) <- c("interval", "steps")
filled.activity <- merge(x=activity, y=avg.steps.int, by="interval")
View(filled.activity)
filled.activity$steps.x[is.na(filled.activity$steps.x)] <- filled.activity$steps.y[is.na(filled.activity$steps.x)]
View(steps.day.filled)
filled.activity <- filled.activity[c("steps.x", "date", "interval")]
names(filled.activity) <- c("steps", "date", "interval")
steps.day.filled <- aggregate(x=filled.activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
# Read the data in using read.csv and the correct column classes
activity <- read.csv("activity.csv", colClasses=c("integer", "Date", "integer"))
```
## What is mean total number of steps taken per day?
```{r}
# First work out a total per day - excluding NA
steps.day <- aggregate(x=activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
names(steps.day) <- c("date", "steps")
# Plot a histogram of the results
hist(steps.day$steps, col="Red", xlab="Steps", main="Histogram of steps per day")
# Work out the mean steps per day:
mean(steps.day$steps, na.rm=TRUE)
# Work out the median steps per day:
median(steps.day$steps, na.rm=TRUE)
```
## What is the average daily activity pattern?
```{r}
# First work out the average steps per interval - excluding NA
avg.steps.int <- aggregate(x=activity$steps, by=list(activity$interval), FUN=mean, na.rm=TRUE)
names(avg.steps.int) <- c("interval", "steps")
# Plot the 'average' day
plot(x=avg.steps.int$interval, y=avg.steps.int$steps, type = "l", xlab="Interval", ylab="Average steps")
# The interval with the highest average number of steps
avg.steps.int[which.max(avg.steps.int$steps),]$interval
```
## Imputing missing values
```{r}
# How many NA values are there in the data
sum(is.na(activity$steps))
# Fill NA values with the average for that interval - based on our previous work
filled.activity <- merge(x=activity, y=avg.steps.int, by="interval")
filled.activity$steps.x[is.na(filled.activity$steps.x)] <- filled.activity$steps.y[is.na(filled.activity$steps.x)]
filled.activity <- filled.activity[c("steps.x", "date", "interval")]
names(filled.activity) <- c("steps", "date", "interval")
# Recompute the total steps per day with the filled values
steps.day.filled <- aggregate(x=filled.activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
names(steps.day.filled) <- c("date", "steps")
# Examine the histogram of the dataset with filled NA values
hist(steps.day.filled$steps, col="Red", xlab="Steps", main="Histogram of steps per day")
# Work out the mean steps per day:
mean(steps.day.filled$steps, na.rm=TRUE)
# Work out the median steps per day:
median(steps.day.filled$steps, na.rm=TRUE)
```
## Are there differences in activity patterns between weekdays and weekends?
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
# Read the data in using read.csv and the correct column classes
activity <- read.csv("activity.csv", colClasses=c("integer", "Date", "integer"))
```
## What is mean total number of steps taken per day?
```{r}
# First work out a total per day - excluding NA
steps.day <- aggregate(x=activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
names(steps.day) <- c("date", "steps")
# Plot a histogram of the results
hist(steps.day$steps, col="Red", xlab="Steps", main="Histogram of steps per day")
# Work out the mean steps per day:
mean(steps.day$steps, na.rm=TRUE)
# Work out the median steps per day:
median(steps.day$steps, na.rm=TRUE)
```
## What is the average daily activity pattern?
```{r}
# First work out the average steps per interval - excluding NA
avg.steps.int <- aggregate(x=activity$steps, by=list(activity$interval), FUN=mean, na.rm=TRUE)
names(avg.steps.int) <- c("interval", "steps")
# Plot the 'average' day
plot(x=avg.steps.int$interval, y=avg.steps.int$steps, type = "l", xlab="Interval", ylab="Average steps")
# The interval with the highest average number of steps
avg.steps.int[which.max(avg.steps.int$steps),]$interval
```
## Imputing missing values
```{r}
# How many NA values are there in the data
sum(is.na(activity$steps))
# Fill NA values with the average for that interval - based on our previous work
filled.activity <- merge(x=activity, y=avg.steps.int, by="interval")
filled.activity$steps.x[is.na(filled.activity$steps.x)] <- filled.activity$steps.y[is.na(filled.activity$steps.x)]
filled.activity <- filled.activity[c("steps.x", "date", "interval")]
names(filled.activity) <- c("steps", "date", "interval")
# Recompute the total steps per day with the filled values
steps.day.filled <- aggregate(x=filled.activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
names(steps.day.filled) <- c("date", "steps")
# Examine the histogram of the dataset with filled NA values
hist(steps.day.filled$steps, col="Red", xlab="Steps", main="Histogram of steps per day")
# Work out the mean steps per day:
mean(steps.day.filled$steps, na.rm=TRUE)
# Work out the median steps per day:
median(steps.day.filled$steps, na.rm=TRUE)
```
## Are there differences in activity patterns between weekdays and weekends?
?order
?arrange
